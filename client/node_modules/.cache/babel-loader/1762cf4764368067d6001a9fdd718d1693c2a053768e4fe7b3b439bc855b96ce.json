{"ast":null,"code":"import{useState,useEffect}from'react';import axios from\"axios\";const apiURL=process.env.REACT_APP_API_URL;const BearerToken=()=>localStorage.getItem(\"jwt\")?JSON.parse(localStorage.getItem(\"jwt\")).token:false;const Headers=()=>{return{headers:{Authorization:\"Bearer \".concat(BearerToken())}};};export const getAllCategory=async()=>{try{let res=await axios.get(\"\".concat(apiURL,\"/api/category/all-category\"),{mode:'cors'},Headers());return res.data;}catch(error){console.log(error);}};export const createCategory=async _ref=>{let{cName,cImage,cDescription,cStatus}=_ref;let formData=new FormData();formData.append(\"cImage\",cImage);formData.append(\"cName\",cName);formData.append(\"cDescription\",cDescription);formData.append(\"cStatus\",cStatus);try{let res=await axios.post(\"\".concat(apiURL,\"/api/category/add-category\"),formData,Headers());return res.data;}catch(error){console.log(error);}};export const editCategory=async(cId,des,status)=>{let data={cId:cId,cDescription:des,cStatus:status};try{let res=await axios.post(\"\".concat(apiURL,\"/api/category/edit-category\"),data,Headers());return res.data;}catch(error){console.log(error);}};export const deleteCategory=async cId=>{try{let res=await axios.post(\"\".concat(apiURL,\"/api/category/delete-category\"),{cId},Headers());return res.data;}catch(error){console.log(error);}};function useSetData(){const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,9000));// Process data\nsetIsLoading(false);}catch(error){console.error(\"Error fetching data:\",error);setIsLoading(false);// Set to false even on error\n}};fetchData();},[]);// Empty dependency array means it runs once on mount\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}