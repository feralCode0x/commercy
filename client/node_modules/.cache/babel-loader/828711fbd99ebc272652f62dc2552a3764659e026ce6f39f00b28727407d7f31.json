{"ast":null,"code":"import{useState,useEffect}from'react';import axios from\"axios\";const apiURL=process.env.REACT_APP_API_URL;export const getAllProduct=async()=>{try{let res=await axios.get(\"\".concat(apiURL,\"/api/product/all-product\"));return res.data;}catch(error){console.log(error);}};export const createPorductImage=async _ref=>{let{pImage}=_ref;/* Most important part for uploading multiple image  */let formData=new FormData();for(const file of pImage){formData.append(\"pImage\",file);}/* Most important part for uploading multiple image  */};export const createProduct=async _ref2=>{let{pName,pDescription,pImage,pStatus,pCategory,pQuantity,pPrice,pOffer}=_ref2;/* Most important part for uploading multiple image  */let formData=new FormData();for(const file of pImage){formData.append(\"pImage\",file);}/* Most important part for uploading multiple image  */formData.append(\"pName\",pName);formData.append(\"pDescription\",pDescription);formData.append(\"pStatus\",pStatus);formData.append(\"pCategory\",pCategory);formData.append(\"pQuantity\",pQuantity);formData.append(\"pPrice\",pPrice);formData.append(\"pOffer\",pOffer);try{let res=await axios.post(\"\".concat(apiURL,\"/api/product/add-product\"),formData);return res.data;}catch(error){console.log(error);}};export const editProduct=async product=>{console.log(product);/* Most important part for updating multiple image  */let formData=new FormData();if(product.pEditImages){for(const file of product.pEditImages){formData.append(\"pEditImages\",file);}}/* Most important part for updating multiple image  */formData.append(\"pId\",product.pId);formData.append(\"pName\",product.pName);formData.append(\"pDescription\",product.pDescription);formData.append(\"pStatus\",product.pStatus);formData.append(\"pCategory\",product.pCategory._id);formData.append(\"pQuantity\",product.pQuantity);formData.append(\"pPrice\",product.pPrice);formData.append(\"pOffer\",product.pOffer);formData.append(\"pImages\",product.pImages);try{let res=await axios.post(\"\".concat(apiURL,\"/api/product/edit-product\"),formData);return res.data;}catch(error){console.log(error);}};export const deleteProduct=async pId=>{try{let res=await axios.post(\"\".concat(apiURL,\"/api/product/delete-product\"),{pId});return res.data;}catch(error){console.log(error);}};export const productByCategory=async catId=>{try{let res=await axios.post(\"\".concat(apiURL,\"/api/product/product-by-category\"),{catId});return res.data;}catch(error){console.log(error);}};export const productByPrice=async price=>{try{let res=await axios.post(\"\".concat(apiURL,\"/api/product/product-by-price\"),{price});return res.data;}catch(error){console.log(error);}};function useSetData(){const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,9000));// Process data\nsetIsLoading(false);}catch(error){console.error(\"Error fetching data:\",error);setIsLoading(false);// Set to false even on error\n}};fetchData();},[]);// Empty dependency array means it runs once on mount\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}