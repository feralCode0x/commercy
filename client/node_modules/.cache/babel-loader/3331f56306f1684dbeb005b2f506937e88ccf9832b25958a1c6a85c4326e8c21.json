{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const getUserById = async uId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/signle-user`, {\n      uId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePersonalInformationFetch = async userData => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/edit-user`, userData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getOrderByUser = async uId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/order/order-by-user`, {\n      uId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePassword = async formData => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/change-password`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nfunction useSetData() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 9000));\n        // Process data\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setIsLoading(false); // Set to false even on error\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means it runs once on mount\n}\n_s(useSetData, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");","map":{"version":3,"names":["useState","useEffect","axios","apiURL","process","env","REACT_APP_API_URL","getUserById","uId","res","post","data","error","console","log","updatePersonalInformationFetch","userData","getOrderByUser","updatePassword","formData","useSetData","_s","isLoading","setIsLoading","fetchData","Promise","resolve","setTimeout"],"sources":["/home/zetecoder/commercy/client/src/components/shop/dashboardUser/FetchApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getUserById = async (uId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/signle-user`, { uId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePersonalInformationFetch = async (userData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/edit-user`, userData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOrderByUser = async (uId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/order/order-by-user`, { uId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePassword = async (formData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/change-password`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction useSetData() {\n const [isLoading, setIsLoading] = useState(true);  \n useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Simulate API call\n                await new Promise(resolve => setTimeout(resolve, 9000)); \n                // Process data\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setIsLoading(false); // Set to false even on error\n            }\n        };\n\n        fetchData();\n    }, []); // Empty dependency array means it runs once on mount\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAOC,GAAG,IAAK;EACxC,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,MAAM,uBAAuB,EAAE;MAAEK;IAAI,CAAC,CAAC;IACrE,OAAOC,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,8BAA8B,GAAG,MAAOC,QAAQ,IAAK;EAChE,IAAI;IACF,IAAIP,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,MAAM,qBAAqB,EAAEa,QAAQ,CAAC;IACpE,OAAOP,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAOT,GAAG,IAAK;EAC3C,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,MAAM,0BAA0B,EAAE;MAAEK;IAAI,CAAC,CAAC;IACxE,OAAOC,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,IAAIV,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,MAAM,2BAA2B,EAAEgB,QAAQ,CAAC;IAC1E,OAAOV,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,SAASQ,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IACT,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD;QACAH,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CW,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACZ;AAACH,EAAA,CAjBQD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}