{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const getAllOrder = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/order/get-all-orders`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editCategory = async (oId, status) => {\n  let data = {\n    oId: oId,\n    status: status\n  };\n  console.log(data);\n  try {\n    let res = await axios.post(`${apiURL}/api/order/update-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteOrder = async oId => {\n  let data = {\n    oId: oId\n  };\n  try {\n    let res = await axios.post(`${apiURL}/api/order/delete-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nfunction useSetData() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 9000));\n        // Process data\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setIsLoading(false); // Set to false even on error\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means it runs once on mount\n}\n_s(useSetData, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");","map":{"version":3,"names":["useState","useEffect","axios","apiURL","process","env","REACT_APP_API_URL","getAllOrder","res","get","data","error","console","log","editCategory","oId","status","post","deleteOrder","useSetData","_s","isLoading","setIsLoading","fetchData","Promise","resolve","setTimeout"],"sources":["/home/zetecoder/commercy/client/src/components/admin/orders/FetchApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getAllOrder = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/order/get-all-orders`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editCategory = async (oId, status) => {\n  let data = { oId: oId, status: status };\n  console.log(data);\n  try {\n    let res = await axios.post(`${apiURL}/api/order/update-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteOrder = async (oId) => {\n  let data = { oId: oId };\n  try {\n    let res = await axios.post(`${apiURL}/api/order/delete-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction useSetData() {\n const [isLoading, setIsLoading] = useState(true);  \n useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Simulate API call\n                await new Promise(resolve => setTimeout(resolve, 9000)); \n                // Process data\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setIsLoading(false); // Set to false even on error\n            }\n        };\n\n        fetchData();\n    }, []); // Empty dependency array means it runs once on mount\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,MAAM,2BAA2B,CAAC;IAC/D,OAAOK,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,KAAK;EACjD,IAAIN,IAAI,GAAG;IAAEK,GAAG,EAAEA,GAAG;IAAEC,MAAM,EAAEA;EAAO,CAAC;EACvCJ,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,IAAI;IACF,IAAIF,GAAG,GAAG,MAAMN,KAAK,CAACe,IAAI,CAAC,GAAGd,MAAM,yBAAyB,EAAEO,IAAI,CAAC;IACpE,OAAOF,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG,MAAOH,GAAG,IAAK;EACxC,IAAIL,IAAI,GAAG;IAAEK,GAAG,EAAEA;EAAI,CAAC;EACvB,IAAI;IACF,IAAIP,GAAG,GAAG,MAAMN,KAAK,CAACe,IAAI,CAAC,GAAGd,MAAM,yBAAyB,EAAEO,IAAI,CAAC;IACpE,OAAOF,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,SAASQ,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IACT,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD;QACAH,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CW,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACZ;AAACH,EAAA,CAjBQD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}